%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Apr  6 17:04:29 2022
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUGAAGUGUGCAGUAAUUAGUGCCAGGUAGGUUAGAUUUCCAGUGUCUCGAGUUAAUCCGUCAGCGAGGUAUAGAGUUCCUAUGCGUUCGGAUAAAAUAUUCCAUAGGAACUUCAUACCGUGCUCUUGGAUUGCUUGGAAGUCAUCGAGAGGGUAAUGGUGGAAGUUCGUGGCUAAUUUGUAAAUCAUC\
) } def
/len { sequence length } bind def

/coor [
[36.79185104 601.46356201]
[36.79185104 586.46356201]
[36.79185104 571.46356201]
[36.79185104 556.46356201]
[36.79185104 541.46356201]
[27.15235138 535.32348633]
[21.62344933 525.18408203]
[21.68410873 513.51538086]
[27.43514442 503.22451782]
[37.54527664 496.93124390]
[38.03863144 481.93936157]
[38.53198624 466.94747925]
[39.02534485 451.95559692]
[36.46115875 447.90811157]
[36.42403030 442.20373535]
[39.78954697 436.48104858]
[40.77572250 421.51348877]
[41.76189804 406.54595947]
[42.74807358 391.57839966]
[43.73424911 376.61083984]
[41.30457687 372.48123169]
[41.45508575 366.77871704]
[45.00700378 361.16979980]
[46.48493195 346.24276733]
[47.96286392 331.31576538]
[49.44079208 316.38876343]
[42.99514008 302.96105957]
[52.05450439 289.99038696]
[40.42918777 299.46942139]
[25.42936516 299.39682007]
[13.89633179 289.80572510]
[11.09021282 275.07055664]
[18.29085541 261.91186523]
[32.21410751 256.33126831]
[46.50968170 260.87402344]
[54.65745544 273.46807861]
[57.84045792 258.80966187]
[61.02345657 244.15127563]
[64.20645905 229.49288940]
[67.38945770 214.83448792]
[70.57245636 200.17610168]
[73.75545502 185.51770020]
[76.93845367 170.85931396]
[72.07809448 156.78002930]
[82.56758118 144.93598938]
[85.75057983 130.27760315]
[88.93357849 115.61920929]
[77.78816223 92.23234558]
[101.57417297 72.12489319]
[100.83430481 57.14315414]
[100.09444427 42.16141129]
[99.35457611 27.17966843]
[98.61470795 12.19792652]
[97.87484741 -2.78381562]
[94.32083893 -11.21742058]
[97.24806976 -18.01764679]
[96.75471497 -33.00952911]
[96.26136017 -48.00141525]
[95.76800537 -62.99330139]
[95.27465057 -77.98518372]
[94.78129578 -92.97706604]
[83.52646637 -103.74584198]
[83.23970032 -118.95677948]
[93.57543945 -129.62017822]
[93.08208466 -144.61206055]
[92.58872986 -159.60394287]
[92.09537506 -174.59582520]
[83.90837097 -188.13404846]
[91.22288513 -201.10891724]
[90.72953033 -216.10079956]
[90.23617554 -231.09268188]
[89.74281311 -246.08456421]
[89.24945831 -261.07644653]
[81.06245422 -274.61468506]
[88.37696838 -287.58953857]
[87.88361359 -302.58142090]
[87.39025879 -317.57330322]
[86.89690399 -332.56521606]
[86.40354919 -347.55709839]
[85.91019440 -362.54898071]
[85.41683960 -377.54086304]
[84.92348480 -392.53274536]
[84.43013000 -407.52462769]
[83.93677521 -422.51651001]
[83.44342041 -437.50839233]
[71.38365173 -428.58865356]
[56.84813690 -432.29254150]
[50.52764893 -445.89590454]
[57.07086182 -459.39355469]
[71.66528320 -462.85806274]
[83.57691956 -453.74111938]
[84.31678772 -468.72283936]
[85.05664825 -483.70458984]
[85.79651642 -498.68634033]
[86.53637695 -513.66809082]
[81.27865601 -529.78613281]
[95.31135559 -539.30035400]
[108.33835602 -528.44982910]
[101.51811981 -512.92822266]
[100.77825928 -497.94647217]
[100.03839111 -482.96472168]
[99.29852295 -467.98297119]
[98.55866241 -453.00125122]
[98.43530273 -438.00173950]
[98.92865753 -423.00985718]
[99.42201233 -408.01797485]
[99.91536713 -393.02609253]
[100.40872192 -378.03421021]
[100.90207672 -363.04232788]
[101.39543152 -348.05044556]
[101.88878632 -333.05856323]
[102.38214111 -318.06668091]
[102.87549591 -303.07479858]
[103.36885071 -288.08291626]
[111.52056885 -275.61700439]
[104.24134827 -261.56982422]
[104.73470306 -246.57792664]
[105.22805786 -231.58604431]
[105.72141266 -216.59416199]
[106.21476746 -201.60227966]
[114.36648560 -189.13636780]
[107.08726501 -175.08918762]
[107.58061981 -160.09729004]
[108.07397461 -145.10540771]
[108.56732941 -130.11352539]
[119.58177185 -120.15272522]
[120.29566956 -104.95584869]
[109.77318573 -93.47042084]
[110.26654053 -78.47853851]
[110.75989532 -63.48665619]
[111.25325012 -48.49477005]
[111.74660492 -33.50288773]
[112.23995972 -18.51100159]
[112.85659027 -3.52368116]
[113.59645081 11.45806122]
[114.33631897 26.43980408]
[115.07618713 41.42154694]
[115.81604767 56.40328598]
[116.55591583 71.38503265]
[121.92687988 57.37957764]
[135.88967896 51.89866257]
[149.35375977 58.51066208]
[153.55326843 72.91080475]
[145.75410461 85.72380829]
[131.03437805 88.60780334]
[145.66610718 91.91124725]
[160.29782104 95.21469116]
[174.57504272 87.89753723]
[189.13764954 94.62879944]
[192.81446838 110.24483490]
[182.78495789 122.76635742]
[166.74288940 122.58792114]
[156.99438477 109.84641266]
[142.36265564 106.54296875]
[127.73094177 103.23952484]
[117.23072052 116.02512360]
[103.59197235 118.80220795]
[100.40897369 133.46060181]
[97.22597504 148.11900330]
[101.85867310 163.24673462]
[91.59684753 174.04231262]
[88.41384888 188.70069885]
[85.23085022 203.35910034]
[82.04785156 218.01748657]
[78.86485291 232.67588806]
[75.68185425 247.33427429]
[72.49884796 261.99267578]
[69.31584930 276.65106201]
[66.98152161 291.46832275]
[73.32145691 305.96368408]
[64.36780548 317.86669922]
[62.88987732 332.79370117]
[61.41194534 347.72070312]
[59.93401718 362.64773560]
[58.70179749 377.59701538]
[57.71562195 392.56457520]
[56.72944641 407.53213501]
[55.74326706 422.49966431]
[54.75709152 437.46722412]
[54.01722717 452.44894409]
[53.52387238 467.44082642]
[53.03051758 482.43273926]
[52.53716278 497.42462158]
[66.00211334 510.73275757]
[65.49040222 529.33856201]
[51.79185104 541.46356201]
[51.79185104 556.46356201]
[51.79185104 571.46356201]
[51.79185104 586.46356201]
[51.79185104 601.46356201]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 190]
[2 189]
[3 188]
[4 187]
[5 186]
[10 183]
[11 182]
[12 181]
[13 180]
[16 179]
[17 178]
[18 177]
[19 176]
[20 175]
[23 174]
[24 173]
[25 172]
[26 171]
[28 169]
[36 168]
[37 167]
[38 166]
[39 165]
[40 164]
[41 163]
[42 162]
[43 161]
[45 159]
[46 158]
[47 157]
[49 139]
[50 138]
[51 137]
[52 136]
[53 135]
[54 134]
[56 133]
[57 132]
[58 131]
[59 130]
[60 129]
[61 128]
[64 125]
[65 124]
[66 123]
[67 122]
[69 120]
[70 119]
[71 118]
[72 117]
[73 116]
[75 114]
[76 113]
[77 112]
[78 111]
[79 110]
[80 109]
[81 108]
[82 107]
[83 106]
[84 105]
[85 104]
[91 103]
[92 102]
[93 101]
[94 100]
[95 99]
[145 155]
[146 154]
[147 153]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
